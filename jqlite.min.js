/*!
 * GIT: https://github.com/shrekshrek/jqlite
 **/

!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):t.$=n()}(this,function(){"use strict";function t(t){return"object"==typeof t}function n(t){return"function"==typeof t}function e(t){return"string"==typeof t}function i(t){return"number"==typeof t}function r(t){return"boolean"==typeof t}function s(t){return Array.isArray(t)}function o(t){return t instanceof Date}function u(t){return t instanceof RegExp}function c(t){return t&&1===t.nodeType}function a(t){document.addEventListener("DOMContentLoaded",t,!1)}function f(i,r){var o;if(!i)return new h;if(f.is$(i))return i;if(e(i))i=i.trim(),"<"===i[0]?(v.innerHTML=i,o=v.children):o=f.query(r||document,i);else if(s(i)||i instanceof NodeList||i instanceof HTMLCollection)o=i;else if(t(i))o=[i];else if(n(i))return a(i);return new h(o)}function h(t){var n,e=t?t.length:0;for(n=0;e>n;n++)this[n]=t[n];this.length=e}var l=[],d=l.slice,p=l.indexOf,v=document.createElement("div");return Object.assign(f,{is$:function(t){return t instanceof h},query:function(t,n){return t.querySelectorAll(n)},extend:function(){return Object.assign.apply(null,arguments)},isObject:t,isFunction:n,isString:e,isNumber:i,isBoolean:r,isArray:s,isDate:o,isRegExp:u,isElement:c,contains:function(t,n){return t!==n&&t.contains(n)},each:function(t,n,e){for(var i=0;i<t.length;i++)n.call(e||this,t[i],i)},getJSON:function(t,n){f.ajax({type:"GET",url:t,success:n})},ajax:function(t){var n=new XMLHttpRequest;n.open(t.type,t.url,!0),n.setRequestHeader("Content-Type","application/x-www-form-urlencoded; charset=UTF-8"),n.onload=function(){if(this.status>=200&&this.status<400){var n=JSON.parse(this.response);t.success&&t.success(n)}},n.onerror=function(){t.error&&t.error()},n.send(t.data)}}),Object.assign(h.prototype,{ready:a,get:function(t){return void 0===t?this:this[t]},eq:function(t){return f(-1===t?d.call(this,t):d.call(this,t,t+1))},first:function(){return this.length?this.eq(0):null},last:function(){return this.length?this.eq(this.length-1):null},find:function(t){if(t){var n=new h;return this.each(function(e){n.add(f(t,e))}),n}return this},add:function(t,n){for(var e=f(t,n),i=0;i<e.length;i++)this[this.length++]=e[i];return this},each:function(t){return f.each(this,t,this),this},empty:function(){return this.each(function(t){t.innerHTML=""})},parent:function(){var t=new h;return this.each(function(n){t.add(n.parentNode)}),t},children:function(){var t=new h;return this.each(function(n){t.add(n.children)}),t},clone:function(){var t=new h;return this.each(function(n){t.add(n.cloneNode(!0))}),t},remove:function(){return this.each(function(t){null!=t.parentNode&&t.parentNode.removeChild(t)})},html:function(t){return 0 in arguments?this.each(function(n){n.innerHTML=t}):0 in this?this[0].innerHTML:null},text:function(t){return 0 in arguments?this.each(function(n){n.textContent=t}):0 in this?this.textContent:null},val:function(t){return void 0===t?"select"===this[0].nodeName?this[0].options[this[0].selectedIndex].value:this[0].value||this[0].getAttribute("value"):(this.each(function(n){if("select"===n.nodeName){for(var e=0,i=n.options.length;i>e;e++)if(n.options[e].value===t){n.options[e].selected=!0;break}}else void 0!==n.value?n.value=t:n.setAttribute("value",t)}),this)},data:function(t,n){if(void 0!==n)this.each(function(e){e.dataset[t]=n});else if(t instanceof Object)for(var e in t)this.data(e,t[e]);else if(this[0])return this[0].dataset[t];return this},attr:function(t,n){if(void 0!==n)this.each(function(e){e.setAttribute(t,n)});else if(t instanceof Object)for(var e in t)this.attr(e,t[e]);else if(this[0])return this[0].getAttribute(t);return this},prop:function(t,n){if(void 0!==n)this.each(function(e){e[t]=n});else if(t instanceof Object)for(var e in t)this.prop(e,t[e]);else if(this[0])return this[0][t];return this},css:function(t,n){if(void 0!==n)n=n instanceof Function?n():n instanceof Number?n+"px":n,"string"==typeof n&&/^\+=|\-=/.test(n)?(n="-"===n.charAt(0)?-parseFloat(n.substr(2)):parseFloat(n.substr(2)),this.each(function(e){e.style[t]=parseFloat(e.style[t])+n+"px"})):this.each(function(e){e.style[t]=n});else if(t instanceof Object)for(var e in t)this.css(e,t[e]);else if(this[0])return this[0].style[t]||window.getComputedStyle(this[0])[t];return this},show:function(){this.css("display","block")},hide:function(){this.css("display","none")},toggle:function(){return this.each(function(t){var n=f(t);"none"==n.css("display")?t.show():t.hide()})},index:function(t){return t?p.call(this,f(t)[0]):p.call(this.parent().children(),this[0])},hasClass:function(t){var n=!1;return this.each(function(e){e.classList.contains(t)&&(n=!0)}),n},addClass:function(t){return this.each(function(n){n.classList.add(t)})},removeClass:function(t){return this.each(function(n){n.classList.remove(t)})},toggleClass:function(t){return this.each(function(n){n.classList.toggle(t)})},append:function(t){var n=f(t);return this.each(function(t){n=n.clone(),n.each(function(n){t.appendChild(n)})})},appendTo:function(t){return f(t).append(this),this},prepend:function(t){var n=f(t);return this.each(function(t){n=n.clone(),n.each(function(n){t.insertBefore(n,t.firstChild)})})},prependTo:function(t){return f(t).prepend(this),this},before:function(t){var n=f(t);return this.each(function(t){n=n.clone(),n.each(function(n){t.parentNode.insertBefore(n,t.parentNode.firstChild)})})},insertBefore:function(t){return f(t).before(this),this},after:function(t){var n=f(t);return this.each(function(t){n=n.clone(),n.each(function(n){t.parentNode.insertBefore(n,t.nextSibling)})})},insertAfter:function(t){return f(t).after(this),this},replaceWith:function(t){return this.before(t).remove()}}),h.prototype.$=h.prototype.find,f});
